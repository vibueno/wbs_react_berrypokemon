{"version":3,"sources":["components/Card/index.js","App.js","reportWebVitals.js","index.js"],"names":["Card","berryInfo","className","category","id","name","App","useState","berry","setBerry","berryFirmness","setBerryFirmness","berryFlavour","setBerryFlavour","userBerry","setuserBerry","useEffect","axios","get","then","response","apiBerry","data","catch","error","console","log","apiBerryFirmness","apiBerryFlavour","onSubmit","e","domUserBerry","document","getElementById","value","preventDefault","type","placeholder","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"8RAEe,SAASA,EAAT,GAA8B,IAAdC,EAAa,EAAbA,UAC7B,OACE,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SAA6BD,EAAUE,WACvC,sBAAKD,UAAU,eAAf,UACE,sBAAKA,UAAU,oBAAf,UACE,0CADF,IACyBD,EAAUG,MAEnC,sBAAKF,UAAU,oBAAf,UACE,4CACCD,EAAUI,cCkFNC,MAzFf,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACNC,EADM,KACCC,EADD,OAE6BF,mBAAS,IAFtC,mBAENG,EAFM,KAESC,EAFT,OAG2BJ,mBAAS,IAHpC,mBAGNK,EAHM,KAGQC,EAHR,OAKqBN,mBAAS,IAL9B,mBAKNO,EALM,KAKKC,EALL,KAkEb,OA3DAC,qBAAU,WACRC,IACGC,IAAI,qCACJC,MAAK,SAACC,GACL,IAAMC,EAAW,CACflB,SAAU,QACVC,GAAIgB,EAASE,KAAKlB,GAClBC,KAAMe,EAASE,KAAKjB,MAEtBI,EAASY,MAEVE,OAAM,SAACC,GACNC,QAAQC,IAAIF,MAGhBP,IACGC,IAAI,8CACJC,MAAK,SAACC,GACL,IAAMO,EAAmB,CACvBxB,SAAU,WACVC,GAAIgB,EAASE,KAAKlB,GAClBC,KAAMe,EAASE,KAAKjB,MAEtBM,EAAiBgB,MAElBJ,OAAM,SAACC,GACNC,QAAQC,IAAIF,MAGhBP,IACGC,IAAI,4CACJC,MAAK,SAACC,GACL,IAAMQ,EAAkB,CACtBzB,SAAU,UACVC,GAAIgB,EAASE,KAAKlB,GAClBC,KAAMe,EAASE,KAAKjB,MAEtBQ,EAAgBe,MAEjBL,OAAM,SAACC,GACNC,QAAQC,IAAIF,QAEf,IAkBD,qCACE,uDACA,sBAAKtB,UAAU,iBAAf,UACE,cAAC,EAAD,CAAMD,UAAWO,IACjB,cAAC,EAAD,CAAMP,UAAWS,IACjB,cAAC,EAAD,CAAMT,UAAWW,OAEnB,uBAAMiB,SAvBY,SAACC,GACrB,IAAMC,EAAeC,SAASC,eAAe,cAE7ChB,IACGC,IADH,0CAC0Ca,EAAaG,QACpDf,MAAK,SAACC,GACLL,EAAaK,EAASE,KAAKjB,SAE5BkB,OAAM,SAACC,GACNT,EAAa,gDAGjBe,EAAEK,kBAWA,UACE,uBACE/B,GAAG,aACHgC,KAAK,OACLC,YAAY,wBAEd,wBAAQD,KAAK,SAAb,qBAEF,sBAAKlC,UAAU,iBAAf,UACE,qDADF,IACsCY,SC5E7BwB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrB,MAAK,YAAkD,IAA/CsB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFhB,SAASC,eAAe,SAM1BK,M","file":"static/js/main.68e3cdec.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./index.css\";\nexport default function Card({ berryInfo }) {\n  return (\n    <div className=\"card\">\n      <div className=\"card-title\">{berryInfo.category}</div>\n      <div className=\"card-content\">\n        <div className=\"card-content-item\">\n          <strong>Id: </strong> {berryInfo.id}\n        </div>\n        <div className=\"card-content-item\">\n          <strong>Name: </strong>\n          {berryInfo.name}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport Card from \"./components/Card\";\n\nfunction App() {\n  const [berry, setBerry] = useState(\"\");\n  const [berryFirmness, setBerryFirmness] = useState(\"\");\n  const [berryFlavour, setBerryFlavour] = useState(\"\");\n\n  const [userBerry, setuserBerry] = useState(\"\");\n\n  useEffect(() => {\n    axios\n      .get(\"https://pokeapi.co/api/v2/berry/1\")\n      .then((response) => {\n        const apiBerry = {\n          category: \"berry\",\n          id: response.data.id,\n          name: response.data.name,\n        };\n        setBerry(apiBerry);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n\n    axios\n      .get(\"https://pokeapi.co/api/v2/berry-firmness/1\")\n      .then((response) => {\n        const apiBerryFirmness = {\n          category: \"firmness\",\n          id: response.data.id,\n          name: response.data.name,\n        };\n        setBerryFirmness(apiBerryFirmness);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n\n    axios\n      .get(\"https://pokeapi.co/api/v2/berry-flavor/1\")\n      .then((response) => {\n        const apiBerryFlavour = {\n          category: \"flavour\",\n          id: response.data.id,\n          name: response.data.name,\n        };\n        setBerryFlavour(apiBerryFlavour);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, []);\n\n  const submitHandler = (e) => {\n    const domUserBerry = document.getElementById(\"user-berry\");\n\n    axios\n      .get(`https://pokeapi.co/api/v2/berry/${domUserBerry.value}`)\n      .then((response) => {\n        setuserBerry(response.data.name);\n      })\n      .catch((error) => {\n        setuserBerry(\"no berry available with the specified id.\");\n      });\n\n    e.preventDefault();\n  };\n\n  return (\n    <>\n      <h1>Welcome to Berryland!</h1>\n      <div className=\"card-container\">\n        <Card berryInfo={berry}></Card>\n        <Card berryInfo={berryFirmness}></Card>\n        <Card berryInfo={berryFlavour}></Card>\n      </div>\n      <form onSubmit={submitHandler}>\n        <input\n          id=\"user-berry\"\n          type=\"text\"\n          placeholder=\"Enter a berry id...\"\n        ></input>\n        <button type=\"submit\">get!</button>\n      </form>\n      <div className=\"returned-berry\">\n        <strong>Your berry:&nbsp;</strong> {userBerry}\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}